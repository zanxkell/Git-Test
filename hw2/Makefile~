#
# Starter makefile for Assignment 5: Classy Zoo
# Typing 'make' or 'make zoo' will create an executable file for testing
#

# Start by defining variables for the compiler and compiler flags (makes it easy to change later)
# We can then use the variables later with $()

CC = g++
CFLAGS = -g -Wall -Wextra



# Simply calling 'make' will invoke whatever entry comes first in the file
# We've set it up to be the default entry (a good habit)

default: Phonebook

# List the object files needed to create the executable file.  For this assignment:
# Zoo.o, main.o

Phonebook:         Phonebook.o   Main.o
		$(CC) $(CFlags) -o  Phonebook Phonebook.o  Main.o

# First, the rule to create Zoo.o

Phonebook.o:      Phonebook.cpp Phonebook.h
		$(CC) $(CFLAGS) -c Phonebook.cpp


# Then, the rule to create main.o

Main.o: Phonebook.cpp Phonebook.h
		$(CC) $(CFLAGS) -c Main.cpp

# Now the logic to clean things up! (invoked with 'make clean')

clean:
		$(RM)  $(Phonebook) *.o *~          
